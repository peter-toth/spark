[spark]
build_tool = maven
setversion_cmd = build/mvn ${MVN_SET_VERSION_CMD} -DnewVersion=${spark_jar_version}
deploy_cmd = bash -c "DO_MAVEN_DEPLOY=deploy cloudera/build.sh"
hadoop_version = "3.1.1.7.1.1.0-565"
PARCELS_SOURCE=${SOURCE_ROOT}/spark/dist/repo_output/spark3/${spark_jar_version}/parcels
CSD_DIR=${ARTIFACTS_DIR}/csd2/2.x

    [[artifacts]]
        artifact_1 = spark-${spark_jar_version}-bin-${hadoop_version}.tgz
        artifact_2 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-sles11.parcel
        artifact_3 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-sles11.parcel.sha1
        artifact_4 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-sles12.parcel
        artifact_5 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-sles12.parcel.sha1
        artifact_6 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-el7.parcel
        artifact_7 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-el7.parcel.sha1
        artifact_8 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-precise.parcel
        artifact_9 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-precise.parcel.sha1
        artifact_10 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-el5.parcel
        artifact_11 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-el5.parcel.sha1
        artifact_12 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-jessie.parcel
        artifact_13 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-jessie.parcel.sha1
        artifact_14 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-wheezy.parcel
        artifact_15 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-wheezy.parcel.sha1
        artifact_16 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-el6.parcel
        artifact_17 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-el6.parcel.sha1
        artifact_18 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-xenial.parcel
        artifact_19 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-xenial.parcel.sha1
        artifact_20 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-trusty.parcel
        artifact_21 = ${PARCEL_DIR}/SPARK3-${spark_jar_version}-1.p0.${GBN}-trusty.parcel.sha1
        artifact_22 = ${PARCEL_DIR}/manifest.json
        artifact_23 = ${CSD_DIR}/spark-csd-${spark_jar_version}.tar.gz

    [[install_cmd]]
        cmd_1 = bash -c "export ATLAS_CONNECTOR_BRANCH=$(cd ${SOURCE_ROOT}/spark_atlas_connector/ ; git rev-parse HEAD); export NEW_SAC_VERSION=${spark_atlas_connector_jar_version}; cloudera/build.sh --gbn ${GBN}"
        cmd_2 = cloudera/docker/build_all.sh --registry docker-private.infra.cloudera.com/cloudera
        cmd_3 = mkdir -p ${PARCEL_DIR} ${CSD_DIR}
        cmd_4 = bash -c "cp ${PARCELS_SOURCE}/* ${PARCEL_DIR}/"
        cmd_5 = bash -c "tar -czf spark-csd-${spark_jar_version}.tar.gz -C ${SOURCE_ROOT}/spark/dist/repo_output/spark3/${spark_jar_version}/csd/ ./"
        cmd_6 = bash -c "cp spark-csd-${spark_jar_version}.tar.gz ${CSD_DIR}/"
        cmd_7 = bash -c "cp ${SOURCE_ROOT}/spark/dist/repo_output/spark3/${spark_jar_version}/csd/* ${CSD_DIR}/"

    [[docker_metadata_cmd]]
        cmd_1 = cloudera/docker_images.yaml, file

    [[test_cmd]]
        cmd_1 = cloudera/build.sh -t

[spark_atlas_connector]
build_tool = maven
MVN=${SOURCE_ROOT}/spark/build/mvn
setversion_cmd = ${MVN} ${MVN_SET_VERSION_CMD} -DnewVersion=${spark_atlas_connector_jar_version}
deploy_cmd = "${MVN} clean deploy -DskipTests"

    [[artifacts]]
        artifact_1 = spark-atlas-connector-assembly/target/spark-atlas-connector-assembly-${spark_atlas_connector_jar_version}.jar
        artifact_2 = spark-atlas-connector/target/spark-atlas-connector_2.12-${spark_atlas_connector_jar_version}.jar

    [[install_cmd]]
        cmd_1 = bash -c "${MVN} -s `ls ${SOURCE_ROOT}/spark/build/apache-maven-*/conf/settings.xml` clean install -DskipTests"

    [[test_cmd]]
        cmd_1 = ${MVN} clean test

    [[xml-replace]]
        REPLACE_1 = 'spark.version', ${spark_jar_version},  ${SOURCE_ROOT}/spark_atlas_connector/pom.xml
